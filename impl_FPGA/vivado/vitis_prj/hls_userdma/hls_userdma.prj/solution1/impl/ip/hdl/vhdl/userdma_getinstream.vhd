-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity userdma_getinstream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStreamTop_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inStreamTop_TVALID : IN STD_LOGIC;
    inStreamTop_TREADY : OUT STD_LOGIC;
    inStreamTop_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    inStreamTop_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    inStreamTop_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStreamTop_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    kernel_mode : IN STD_LOGIC_VECTOR (1 downto 0);
    s2m_err : OUT STD_LOGIC_VECTOR (1 downto 0);
    s2m_err_ap_vld : OUT STD_LOGIC;
    inbuf_din : OUT STD_LOGIC_VECTOR (32 downto 0);
    inbuf_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    inbuf_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    inbuf_full_n : IN STD_LOGIC;
    inbuf_write : OUT STD_LOGIC;
    incount25_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    incount25_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    incount25_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    incount25_full_n : IN STD_LOGIC;
    incount25_write : OUT STD_LOGIC;
    kernel_mode_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_c_full_n : IN STD_LOGIC;
    kernel_mode_c_write : OUT STD_LOGIC );
end;


architecture behav of userdma_getinstream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_mode_c_blk_n : STD_LOGIC;
    signal select_ln72_fu_129_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln72_reg_162 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_idle : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_ready : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_din : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_write : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_write : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inStreamTop_TREADY : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_tmp_last_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_tmp_last_V_out_ap_vld : STD_LOGIC;
    signal grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal select_ln82_fu_141_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal s2m_err_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal icmp_ln1065_fu_113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln69_fu_123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal regslice_both_inStreamTop_V_data_V_U_apdone_blk : STD_LOGIC;
    signal inStreamTop_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal inStreamTop_TVALID_int_regslice : STD_LOGIC;
    signal inStreamTop_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_inStreamTop_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inStreamTop_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal inStreamTop_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_inStreamTop_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inStreamTop_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inStreamTop_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal inStreamTop_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_inStreamTop_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inStreamTop_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inStreamTop_V_user_V_U_apdone_blk : STD_LOGIC;
    signal inStreamTop_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_inStreamTop_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inStreamTop_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_inStreamTop_V_last_V_U_apdone_blk : STD_LOGIC;
    signal inStreamTop_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_inStreamTop_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_inStreamTop_V_last_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component userdma_getinstream_Pipeline_VITIS_LOOP_72_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inStreamTop_TVALID : IN STD_LOGIC;
        inbuf_din : OUT STD_LOGIC_VECTOR (32 downto 0);
        inbuf_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        inbuf_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        inbuf_full_n : IN STD_LOGIC;
        inbuf_write : OUT STD_LOGIC;
        incount25_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        incount25_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        incount25_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        incount25_full_n : IN STD_LOGIC;
        incount25_write : OUT STD_LOGIC;
        inStreamTop_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        inStreamTop_TREADY : OUT STD_LOGIC;
        inStreamTop_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        inStreamTop_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        inStreamTop_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        inStreamTop_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln72 : IN STD_LOGIC_VECTOR (11 downto 0);
        tmp_last_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        tmp_last_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component userdma_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93 : component userdma_getinstream_Pipeline_VITIS_LOOP_72_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start,
        ap_done => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done,
        ap_idle => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_idle,
        ap_ready => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_ready,
        inStreamTop_TVALID => inStreamTop_TVALID_int_regslice,
        inbuf_din => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_din,
        inbuf_num_data_valid => ap_const_lv11_0,
        inbuf_fifo_cap => ap_const_lv11_0,
        inbuf_full_n => inbuf_full_n,
        inbuf_write => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_write,
        incount25_din => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_din,
        incount25_num_data_valid => ap_const_lv3_0,
        incount25_fifo_cap => ap_const_lv3_0,
        incount25_full_n => incount25_full_n,
        incount25_write => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_write,
        inStreamTop_TDATA => inStreamTop_TDATA_int_regslice,
        inStreamTop_TREADY => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inStreamTop_TREADY,
        inStreamTop_TKEEP => inStreamTop_TKEEP_int_regslice,
        inStreamTop_TSTRB => inStreamTop_TSTRB_int_regslice,
        inStreamTop_TUSER => inStreamTop_TUSER_int_regslice,
        inStreamTop_TLAST => inStreamTop_TLAST_int_regslice,
        select_ln72 => select_ln72_reg_162,
        tmp_last_V_out => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_tmp_last_V_out,
        tmp_last_V_out_ap_vld => grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_tmp_last_V_out_ap_vld);

    regslice_both_inStreamTop_V_data_V_U : component userdma_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => inStreamTop_TDATA,
        vld_in => inStreamTop_TVALID,
        ack_in => regslice_both_inStreamTop_V_data_V_U_ack_in,
        data_out => inStreamTop_TDATA_int_regslice,
        vld_out => inStreamTop_TVALID_int_regslice,
        ack_out => inStreamTop_TREADY_int_regslice,
        apdone_blk => regslice_both_inStreamTop_V_data_V_U_apdone_blk);

    regslice_both_inStreamTop_V_keep_V_U : component userdma_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => inStreamTop_TKEEP,
        vld_in => inStreamTop_TVALID,
        ack_in => regslice_both_inStreamTop_V_keep_V_U_ack_in,
        data_out => inStreamTop_TKEEP_int_regslice,
        vld_out => regslice_both_inStreamTop_V_keep_V_U_vld_out,
        ack_out => inStreamTop_TREADY_int_regslice,
        apdone_blk => regslice_both_inStreamTop_V_keep_V_U_apdone_blk);

    regslice_both_inStreamTop_V_strb_V_U : component userdma_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => inStreamTop_TSTRB,
        vld_in => inStreamTop_TVALID,
        ack_in => regslice_both_inStreamTop_V_strb_V_U_ack_in,
        data_out => inStreamTop_TSTRB_int_regslice,
        vld_out => regslice_both_inStreamTop_V_strb_V_U_vld_out,
        ack_out => inStreamTop_TREADY_int_regslice,
        apdone_blk => regslice_both_inStreamTop_V_strb_V_U_apdone_blk);

    regslice_both_inStreamTop_V_user_V_U : component userdma_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => inStreamTop_TUSER,
        vld_in => inStreamTop_TVALID,
        ack_in => regslice_both_inStreamTop_V_user_V_U_ack_in,
        data_out => inStreamTop_TUSER_int_regslice,
        vld_out => regslice_both_inStreamTop_V_user_V_U_vld_out,
        ack_out => inStreamTop_TREADY_int_regslice,
        apdone_blk => regslice_both_inStreamTop_V_user_V_U_apdone_blk);

    regslice_both_inStreamTop_V_last_V_U : component userdma_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => inStreamTop_TLAST,
        vld_in => inStreamTop_TVALID,
        ack_in => regslice_both_inStreamTop_V_last_V_U_ack_in,
        data_out => inStreamTop_TLAST_int_regslice,
        vld_out => regslice_both_inStreamTop_V_last_V_U_vld_out,
        ack_out => inStreamTop_TREADY_int_regslice,
        apdone_blk => regslice_both_inStreamTop_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_ready = ap_const_logic_1)) then 
                    grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    s2m_err_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                s2m_err_preg(1) <= '0';
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                                        s2m_err_preg(1) <= select_ln82_fu_141_p3(1);
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    select_ln72_reg_162(11 downto 10) <= select_ln72_fu_129_p3(11 downto 10);
            end if;
        end if;
    end process;
    select_ln72_reg_162(9 downto 0) <= "0000000000";
    s2m_err_preg(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, kernel_mode_c_full_n, grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, kernel_mode_c_full_n)
    begin
        if (((ap_start = ap_const_logic_0) or (kernel_mode_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done)
    begin
        if ((grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, kernel_mode_c_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (kernel_mode_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_ap_start_reg;
    icmp_ln1065_4_fu_118_p2 <= "1" when (kernel_mode = ap_const_lv2_1) else "0";
    icmp_ln1065_fu_113_p2 <= "1" when (kernel_mode = ap_const_lv2_0) else "0";
    inStreamTop_TREADY <= regslice_both_inStreamTop_V_data_V_U_ack_in;

    inStreamTop_TREADY_int_regslice_assign_proc : process(grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inStreamTop_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            inStreamTop_TREADY_int_regslice <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inStreamTop_TREADY;
        else 
            inStreamTop_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    inbuf_din <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_din;

    inbuf_write_assign_proc : process(grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            inbuf_write <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_inbuf_write;
        else 
            inbuf_write <= ap_const_logic_0;
        end if; 
    end process;

    incount25_din <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_din;

    incount25_write_assign_proc : process(grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            incount25_write <= grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_incount25_write;
        else 
            incount25_write <= ap_const_logic_0;
        end if; 
    end process;


    kernel_mode_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, kernel_mode_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_mode_c_blk_n <= kernel_mode_c_full_n;
        else 
            kernel_mode_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    kernel_mode_c_din <= kernel_mode;

    kernel_mode_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, kernel_mode_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_mode_c_write <= ap_const_logic_1;
        else 
            kernel_mode_c_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln69_fu_123_p2 <= (icmp_ln1065_fu_113_p2 or icmp_ln1065_4_fu_118_p2);

    s2m_err_assign_proc : process(ap_CS_fsm_state4, select_ln82_fu_141_p3, s2m_err_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2m_err <= select_ln82_fu_141_p3;
        else 
            s2m_err <= s2m_err_preg;
        end if; 
    end process;


    s2m_err_ap_vld_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2m_err_ap_vld <= ap_const_logic_1;
        else 
            s2m_err_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln72_fu_129_p3 <= 
        ap_const_lv12_800 when (or_ln69_fu_123_p2(0) = '1') else 
        ap_const_lv12_400;
    select_ln82_fu_141_p3 <= 
        ap_const_lv2_0 when (grp_getinstream_Pipeline_VITIS_LOOP_72_1_fu_93_tmp_last_V_out(0) = '1') else 
        ap_const_lv2_2;
end behav;
