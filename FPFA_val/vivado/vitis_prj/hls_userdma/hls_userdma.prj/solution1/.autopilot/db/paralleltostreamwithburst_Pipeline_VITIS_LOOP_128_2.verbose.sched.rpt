

================================================================
== Vitis HLS Report for 'paralleltostreamwithburst_Pipeline_VITIS_LOOP_128_2'
================================================================
* Date:           Wed May 29 12:58:13 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        hls_userdma.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_128_2  |        ?|        ?|        12|          1|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 1, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%a = alloca i32 1"   --->   Operation 15 'alloca' 'a' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%final_m2s_len = alloca i32 1"   --->   Operation 16 'alloca' 'final_m2s_len' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 17 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln91_1_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln91_1"   --->   Operation 18 'read' 'zext_ln91_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln91_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln91"   --->   Operation 19 'read' 'zext_ln91_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%in_memory_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_memory"   --->   Operation 20 'read' 'in_memory_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%in_memory_addr_0_idx_read = read i61 @_ssdm_op_Read.ap_auto.i61, i61 %in_memory_addr_0_idx"   --->   Operation 21 'read' 'in_memory_addr_0_idx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sub46_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sub46"   --->   Operation 22 'read' 'sub46_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%even_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %even"   --->   Operation 23 'read' 'even_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%count_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %count_1"   --->   Operation 24 'read' 'count_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%final_m2s_len_4_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %final_m2s_len_4"   --->   Operation 25 'read' 'final_m2s_len_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln91_1_cast = zext i6 %zext_ln91_1_read"   --->   Operation 26 'zext' 'zext_ln91_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln91_cast = zext i6 %zext_ln91_read"   --->   Operation 27 'zext' 'zext_ln91_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %gmem1, void @empty_4, i32 0, i32 0, void @empty_3, i32 0, i32 1024, void @empty_0, void @empty_1, void @empty_3, i32 4, i32 16, i32 256, i32 16, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %outbuf, void @empty_16, i32 0, i32 0, void @empty_3, i32 0, i32 0, void @empty_3, void @empty_3, void @empty_3, i32 0, i32 0, i32 0, i32 0, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln0 = store i9 0, i9 %i"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %final_m2s_len_4_read, i32 %final_m2s_len"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %a"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 4.83>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%high = phi i1 0, void %newFuncRoot, i1 %high_2, void %if.end31"   --->   Operation 34 'phi' 'high' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_1 = load i9 %i" [userdma.cpp:128]   --->   Operation 35 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i9 %i_1" [userdma.cpp:128]   --->   Operation 36 'zext' 'zext_ln128' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (2.47ns)   --->   "%icmp_ln128 = icmp_slt  i32 %zext_ln128, i32 %count_1_read" [userdma.cpp:128]   --->   Operation 37 'icmp' 'icmp_ln128' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.82ns)   --->   "%i_2 = add i9 %i_1, i9 1" [userdma.cpp:128]   --->   Operation 38 'add' 'i_2' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln128 = br i1 %icmp_ln128, void %for.end.loopexit_ifconv.exitStub, void %for.body.split" [userdma.cpp:128]   --->   Operation 39 'br' 'br_ln128' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%specpipeline_ln129 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_3" [userdma.cpp:129]   --->   Operation 40 'specpipeline' 'specpipeline_ln129' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln111 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [userdma.cpp:111]   --->   Operation 41 'specloopname' 'specloopname_ln111' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%a_load_2 = load i32 %a" [userdma.cpp:132]   --->   Operation 42 'load' 'a_load_2' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln131 = br i1 %high, void %if.else26, void %if.then23" [userdma.cpp:131]   --->   Operation 43 'br' 'br_ln131' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.55ns)   --->   "%add_ln132 = add i32 %a_load_2, i32 4294967295" [userdma.cpp:132]   --->   Operation 44 'add' 'add_ln132' <Predicate = (icmp_ln128 & high)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%a_load = load i32 %a" [userdma.cpp:137]   --->   Operation 45 'load' 'a_load' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node high_2)   --->   "%xor_ln135 = xor i1 %high, i1 1" [userdma.cpp:135]   --->   Operation 46 'xor' 'xor_ln135' <Predicate = (icmp_ln128 & even_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.99ns) (out node of the LUT)   --->   "%high_2 = select i1 %even_read, i1 %xor_ln135, i1 %high" [userdma.cpp:135]   --->   Operation 47 'select' 'high_2' <Predicate = (icmp_ln128)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (2.55ns)   --->   "%add_ln137 = add i32 %a_load, i32 1" [userdma.cpp:137]   --->   Operation 48 'add' 'add_ln137' <Predicate = (icmp_ln128)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node a_2)   --->   "%select_ln137 = select i1 %high_2, i32 %add_ln137, i32 %a_load" [userdma.cpp:137]   --->   Operation 49 'select' 'select_ln137' <Predicate = (icmp_ln128 & even_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.69ns) (out node of the LUT)   --->   "%a_2 = select i1 %even_read, i32 %select_ln137, i32 %add_ln137" [userdma.cpp:137]   --->   Operation 50 'select' 'a_2' <Predicate = (icmp_ln128)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (2.47ns)   --->   "%icmp_ln139_1 = icmp_eq  i32 %zext_ln128, i32 %sub46_read" [userdma.cpp:139]   --->   Operation 51 'icmp' 'icmp_ln139_1' <Predicate = (icmp_ln128)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.58ns)   --->   "%store_ln128 = store i9 %i_2, i9 %i" [userdma.cpp:128]   --->   Operation 52 'store' 'store_ln128' <Predicate = (icmp_ln128)> <Delay = 1.58>
ST_2 : Operation 53 [1/1] (1.58ns)   --->   "%store_ln128 = store i32 %a_2, i32 %a" [userdma.cpp:128]   --->   Operation 53 'store' 'store_ln128' <Predicate = (icmp_ln128)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 6.96>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln91_2 = sext i32 %a_load_2"   --->   Operation 54 'sext' 'sext_ln91_2' <Predicate = (icmp_ln128 & !high)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (3.44ns)   --->   "%add_ln91_2 = add i61 %in_memory_addr_0_idx_read, i61 %sext_ln91_2"   --->   Operation 55 'add' 'add_ln91_2' <Predicate = (icmp_ln128 & !high)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln91_2 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i61.i3, i61 %add_ln91_2, i3 0"   --->   Operation 56 'bitconcatenate' 'shl_ln91_2' <Predicate = (icmp_ln128 & !high)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (3.52ns)   --->   "%add_ln91_3 = add i64 %shl_ln91_2, i64 %in_memory_read"   --->   Operation 57 'add' 'add_ln91_3' <Predicate = (icmp_ln128 & !high)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln91_3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln91_3, i32 3, i32 63"   --->   Operation 58 'partselect' 'trunc_ln91_3' <Predicate = (icmp_ln128 & !high)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln91 = sext i32 %add_ln132"   --->   Operation 59 'sext' 'sext_ln91' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (3.44ns)   --->   "%add_ln91 = add i61 %in_memory_addr_0_idx_read, i61 %sext_ln91"   --->   Operation 60 'add' 'add_ln91' <Predicate = (icmp_ln128 & high)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node add_ln91_1)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i61.i3, i61 %add_ln91, i3 0"   --->   Operation 61 'bitconcatenate' 'shl_ln' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node add_ln91_1)   --->   "%or_ln91 = or i64 %shl_ln, i64 4"   --->   Operation 62 'or' 'or_ln91' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (3.52ns) (out node of the LUT)   --->   "%add_ln91_1 = add i64 %or_ln91, i64 %in_memory_read"   --->   Operation 63 'add' 'add_ln91_1' <Predicate = (icmp_ln128 & high)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln91_2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln91_1, i32 3, i32 63"   --->   Operation 64 'partselect' 'trunc_ln91_2' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln91_3 = sext i61 %trunc_ln91_3"   --->   Operation 65 'sext' 'sext_ln91_3' <Predicate = (icmp_ln128 & !high)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%gmem1_addr_1 = getelementptr i64 %gmem1, i64 %sext_ln91_3"   --->   Operation 66 'getelementptr' 'gmem1_addr_1' <Predicate = (icmp_ln128 & !high)> <Delay = 0.00>
ST_4 : Operation 67 [7/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 67 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln91_1 = sext i61 %trunc_ln91_2"   --->   Operation 68 'sext' 'sext_ln91_1' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%gmem1_addr = getelementptr i64 %gmem1, i64 %sext_ln91_1"   --->   Operation 69 'getelementptr' 'gmem1_addr' <Predicate = (icmp_ln128 & high)> <Delay = 0.00>
ST_4 : Operation 70 [7/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 70 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 71 [6/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 71 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 72 [6/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 72 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 73 [5/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 73 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 74 [5/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 74 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 75 [4/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 75 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 76 [4/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 76 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 77 [3/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 77 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 78 [3/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 78 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 79 [2/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 79 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 80 [2/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 80 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 81 [1/7] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1"   --->   Operation 81 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 82 [1/7] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1"   --->   Operation 82 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 83 [1/1] (7.30ns)   --->   "%gmem1_addr_1_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %gmem1_addr_1"   --->   Operation 83 'read' 'gmem1_addr_1_read' <Predicate = (icmp_ln128 & !high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 84 [1/1] (7.30ns)   --->   "%gmem1_addr_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %gmem1_addr"   --->   Operation 84 'read' 'gmem1_addr_read' <Predicate = (icmp_ln128 & high)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 4.59>
ST_12 : Operation 85 [1/1] (4.59ns)   --->   "%lshr_ln91_1 = lshr i64 %gmem1_addr_1_read, i64 %zext_ln91_1_cast"   --->   Operation 85 'lshr' 'lshr_ln91_1' <Predicate = (icmp_ln128 & !high)> <Delay = 4.59> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.59> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 86 [1/1] (1.58ns)   --->   "%br_ln0 = br void %if.end31"   --->   Operation 86 'br' 'br_ln0' <Predicate = (icmp_ln128 & !high)> <Delay = 1.58>
ST_12 : Operation 87 [1/1] (4.59ns)   --->   "%lshr_ln91 = lshr i64 %gmem1_addr_read, i64 %zext_ln91_cast"   --->   Operation 87 'lshr' 'lshr_ln91' <Predicate = (icmp_ln128 & high)> <Delay = 4.59> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.59> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 88 [1/1] (1.58ns)   --->   "%br_ln132 = br void %if.end31" [userdma.cpp:132]   --->   Operation 88 'br' 'br_ln132' <Predicate = (icmp_ln128 & high)> <Delay = 1.58>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 99 'ret' 'ret_ln0' <Predicate = (!icmp_ln128)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 6.95>
ST_13 : Operation 89 [1/1] (0.00ns)   --->   "%phi_ln104 = phi i64 %lshr_ln91, void %if.then23, i64 %lshr_ln91_1, void %if.else26" [userdma.cpp:104]   --->   Operation 89 'phi' 'phi_ln104' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_13 : Operation 90 [1/1] (0.00ns)   --->   "%final_m2s_len_load = load i32 %final_m2s_len" [userdma.cpp:145]   --->   Operation 90 'load' 'final_m2s_len_load' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_13 : Operation 91 [1/1] (0.00ns)   --->   "%out_val_data_filed_V = trunc i64 %phi_ln104" [userdma.cpp:104]   --->   Operation 91 'trunc' 'out_val_data_filed_V' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_13 : Operation 92 [1/1] (2.47ns)   --->   "%icmp_ln139 = icmp_slt  i32 %final_m2s_len_load, i32 257" [userdma.cpp:139]   --->   Operation 92 'icmp' 'icmp_ln139' <Predicate = (icmp_ln128)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 93 [1/1] (0.97ns)   --->   "%out_val_last_V = and i1 %icmp_ln139, i1 %icmp_ln139_1" [userdma.cpp:139]   --->   Operation 93 'and' 'out_val_last_V' <Predicate = (icmp_ln128)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 94 [1/1] (0.00ns)   --->   "%p_0 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i32, i1 %out_val_last_V, i32 %out_val_data_filed_V" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 94 'bitconcatenate' 'p_0' <Predicate = (icmp_ln128)> <Delay = 0.00>
ST_13 : Operation 95 [1/1] (3.50ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i33P0A, i33 %outbuf, i33 %p_0" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 95 'write' 'write_ln174' <Predicate = (icmp_ln128)> <Delay = 3.50> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.50> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 33> <Depth = 1024> <FIFO>
ST_13 : Operation 96 [1/1] (2.55ns)   --->   "%final_m2s_len_1 = add i32 %final_m2s_len_load, i32 4294967295" [userdma.cpp:145]   --->   Operation 96 'add' 'final_m2s_len_1' <Predicate = (icmp_ln128)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 97 [1/1] (1.58ns)   --->   "%store_ln128 = store i32 %final_m2s_len_1, i32 %final_m2s_len" [userdma.cpp:128]   --->   Operation 97 'store' 'store_ln128' <Predicate = (icmp_ln128)> <Delay = 1.58>
ST_13 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln128 = br void %for.body" [userdma.cpp:128]   --->   Operation 98 'br' 'br_ln128' <Predicate = (icmp_ln128)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('i') [13]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [26]  (1.59 ns)

 <State 2>: 4.84ns
The critical path consists of the following:
	'load' operation ('a_load', userdma.cpp:137) on local variable 'a' [70]  (0 ns)
	'add' operation ('add_ln137', userdma.cpp:137) [75]  (2.55 ns)
	'select' operation ('a', userdma.cpp:137) [77]  (0.698 ns)
	'store' operation ('store_ln128', userdma.cpp:128) of variable 'a', userdma.cpp:137 on local variable 'a' [86]  (1.59 ns)

 <State 3>: 6.96ns
The critical path consists of the following:
	'add' operation ('add_ln91_2') [44]  (3.44 ns)
	'add' operation ('add_ln91_3') [46]  (3.52 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem1_addr_1') [49]  (0 ns)
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req') on port 'gmem1' [50]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem1_addr_1_read') on port 'gmem1' [51]  (7.3 ns)

 <State 12>: 4.59ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln91_1') [52]  (4.59 ns)

 <State 13>: 6.96ns
The critical path consists of the following:
	'load' operation ('final_m2s_len_load', userdma.cpp:145) on local variable 'final_m2s_len' [71]  (0 ns)
	'icmp' operation ('icmp_ln139', userdma.cpp:139) [78]  (2.47 ns)
	'and' operation ('out_val.last.V', userdma.cpp:139) [80]  (0.978 ns)
	fifo write operation ('write_ln174', /tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) on port 'outbuf' (/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) [82]  (3.51 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
